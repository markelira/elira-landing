rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    // Stats: Public read, no client writes (admin only)
    match /stats/{document} {
      allow read: if true;
      allow write: if false;
    }
    
    // Leads: Anyone can create, no reading for privacy
    match /leads/{document} {
      allow create: if true;
      allow read, update, delete: if false;
    }
    
    // Activities: Public read and create for real-time feed
    match /activities/{document} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if false;
    }
    
    // Resources: Public read for PDF downloads
    match /resources/{document} {
      allow read: if true;
      allow write: if false;
    }
    
    // Users: Users can read/update their own profile
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if false; // Only created via Cloud Functions
      allow delete: if false;
    }
    
    // Payments: Users can read their own payment records
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if false; // Only created via Cloud Functions
    }
    
    // Course Content: Public read for course structure
    match /course-content/{courseId} {
      allow read: if true;
      allow write: if false; // Only updated by admin
    }
    
    // User Progress: Users can read/update their own progress
    match /user-progress/{userId} {
      allow read, write: if isOwner(userId);
      
      // Lesson progress subcollection
      match /lessons/{lessonId} {
        allow read, write: if isOwner(userId);
      }
    }
  }
}